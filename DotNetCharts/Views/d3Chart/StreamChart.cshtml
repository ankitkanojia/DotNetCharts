@{
    ViewBag.Title = "StreamChart";
    Layout = "~/Views/Shared/_d3ChartLayout.cshtml";
}

<div class="row mt-5 mb-5">
    <div class="col-md-6">
        <div class="card">
            <div class="card-header">
                Simple Stream Chart
            </div>
            <div class="card-body">
                <!-- Create a div where the graph will take place -->
                <div id="my_dataviz" class="text-center"></div>
            </div>
        </div>
    </div>
</div>

<script>
    // set the dimensions and margins of the graph
    var margin = { top: 20, right: 30, bottom: 30, left: 60 },
        width = 460 - margin.left - margin.right,
        height = 400 - margin.top - margin.bottom;

    // append the svg object to the body of the page
    var svg = d3.select("#my_dataviz")
        .append("svg")
        .attr("width", width + margin.left + margin.right)
        .attr("height", height + margin.top + margin.bottom)
        .append("g")
        .attr("transform",
            "translate(" + margin.left + "," + margin.top + ")");

    // Parse the Data
    d3.csv("https://raw.githubusercontent.com/holtzy/data_to_viz/master/Example_dataset/5_OneCatSevNumOrdered_wide.csv", function (data) {

        // List of groups = header of the csv files
        var keys = data.columns.slice(1)

        // Add X axis
        var x = d3.scaleLinear()
            .domain(d3.extent(data, function (d) { return d.year; }))
            .range([0, width]);
        svg.append("g")
            .attr("transform", "translate(0," + height + ")")
            .call(d3.axisBottom(x).ticks(5));

        // Add Y axis
        var y = d3.scaleLinear()
            .domain([-100000, 100000])
            .range([height, 0]);
        svg.append("g")
            .call(d3.axisLeft(y));

        // color palette
        var color = d3.scaleOrdinal()
            .domain(keys)
            .range(['#e41a1c', '#377eb8', '#4daf4a', '#984ea3', '#ff7f00', '#ffff33', '#a65628', '#f781bf'])

        //stack the data?
        var stackedData = d3.stack()
            .offset(d3.stackOffsetSilhouette)
            .keys(keys)
            (data)

        // Show the areas
        svg
            .selectAll("mylayers")
            .data(stackedData)
            .enter()
            .append("path")
            .style("fill", function (d) { return color(d.key); })
            .attr("d", d3.area()
                .x(function (d, i) { return x(d.data.year); })
                .y0(function (d) { return y(d[0]); })
                .y1(function (d) { return y(d[1]); })
            )

    })
</script>